---
import type { CollectionEntry } from 'astro:content';
import Layout from '~/layouts/PageLayout.astro';
import SeriesNavigation from '~/components/blog/SeriesNavigation.astro';
import TableOfContents from '~/components/blog/TableOfContents.astro';
import RelatedPosts from '~/components/blog/RelatedPosts.astro';
import { Icon } from 'astro-icon/components';

export interface Props {
  post: CollectionEntry<'post'>;
  headings?: {
    depth: number;
    slug: string;
    text: string;
  }[];
}

const { post, headings = [] } = Astro.props;
const { data } = post;

const metadata = {
  title: data.title,
  description: data.excerpt,
  image: data.image,
  ...data.metadata,
};

const publishDate = new Date(data.publishDate);
const updateDate = data.updateDate ? new Date(data.updateDate) : null;
---

<Layout metadata={metadata}>
  <article class="px-4 md:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <header class="mb-8">
      {
        data.featured && (
          <div class="mb-4">
            <span class="inline-flex items-center bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 px-3 py-1 rounded-full text-sm font-medium">
              <Icon name="tabler:star-filled" class="w-4 h-4 mr-1" />
              Featured Post
            </span>
          </div>
        )
      }

      <div class="flex flex-wrap gap-2 mb-4">
        {
          data.category && (
            <a
              href={`/categories/${encodeURIComponent(data.category)}`}
              class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-3 py-1 rounded-full text-sm font-medium hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors"
            >
              {data.category}
            </a>
          )
        }
        {
          data.tags?.map((tag) => (
            <a
              href={`/tags/${encodeURIComponent(tag)}`}
              class="bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 px-3 py-1 rounded-full text-sm hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"
            >
              #{tag}
            </a>
          ))
        }
      </div>

      <h1 class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading">
        {data.title}
      </h1>

      {data.excerpt && <p class="text-xl text-muted dark:text-slate-400 mb-6">{data.excerpt}</p>}

      <div class="flex items-center gap-6 text-sm text-gray-600 dark:text-gray-400 mb-6">
        <div class="flex items-center">
          <Icon name="tabler:calendar" class="w-4 h-4 mr-1" />
           Published {
            publishDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })
          }
        </div>

        {
          updateDate && (
            <div class="flex items-center">
              <Icon name="tabler:edit" class="w-4 h-4 mr-1" />
              Updated{' '}
              {updateDate.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
              })}
            </div>
          )
        }
      </div>

      {
        data.image && (
          <div class="mb-8 rounded-lg overflow-hidden">
            <img src={data.image} alt={data.title} class="w-full h-64 md:h-80 object-cover" loading="eager" />
          </div>
        )
      }

      <!-- Prerequisites -->
      {
        data.prerequisites && data.prerequisites.length > 0 && (
          <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700 rounded-lg p-4 mb-6">
            <h3 class="text-sm font-semibold text-blue-800 dark:text-blue-200 mb-2 flex items-center">
              <Icon name="tabler:info-circle" class="w-4 h-4 mr-1" />
              Prerequisites
            </h3>
            <ul class="text-sm text-blue-700 dark:text-blue-300 space-y-1">
              {data.prerequisites.map((prereq) => (
                <li>â€¢ {prereq}</li>
              ))}
            </ul>
          </div>
        )
      }

      <!-- External Links -->
      {
        data.externalLinks && data.externalLinks.length > 0 && (
          <div class="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700 rounded-lg p-4 mb-6">
            <h3 class="text-sm font-semibold text-green-800 dark:text-green-200 mb-2 flex items-center">
              <Icon name="tabler:external-link" class="w-4 h-4 mr-1" />
              Related Links
            </h3>
            <ul class="text-sm space-y-2">
              {data.externalLinks.map((link) => (
                <li>
                  <a
                    href={link.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-green-700 dark:text-green-300 hover:text-green-900 dark:hover:text-green-100 transition-colors flex items-center"
                  >
                    {link.title}
                    <Icon name="tabler:external-link" class="w-3 h-3 ml-1" />
                  </a>
                  {link.description && <p class="text-green-600 dark:text-green-400 mt-1">{link.description}</p>}
                </li>
              ))}
            </ul>
          </div>
        )
      }
    </header>

    <!-- Series Navigation -->
    {
      data.series && data.seriesOrder && (
        <SeriesNavigation currentSeries={data.series} currentOrder={data.seriesOrder} />
      )
    }

    <!-- Table of Contents -->
    <TableOfContents headings={headings} />

    <!-- Content -->
    <div class="prose prose-lg dark:prose-invert max-w-none">
      <slot />
    </div>

    <!-- Related Posts -->
    <RelatedPosts currentPost={post} />
  </article>
</Layout>

<style is:global>
  /* Enhanced prose styles */
  .prose {
    @apply text-gray-900 dark:text-gray-100;
  }

  .prose h2 {
    @apply border-b border-gray-200 dark:border-gray-700 pb-2;
  }

  .prose pre {
    @apply bg-gray-900 dark:bg-gray-800;
  }

  .prose code {
    @apply bg-gray-100 dark:bg-gray-800 px-1 py-0.5 rounded text-sm;
  }

  .prose pre code {
    @apply bg-transparent px-0 py-0;
  }

  .prose blockquote {
    @apply border-l-4 border-blue-500 bg-blue-50 dark:bg-blue-900/20 pl-4 py-2;
  }
</style>
